package patentImport.util;

import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import lombok.Data;

/**
 * @author:JXH
 * @date:2019年3月27日-下午5:19:50
 * 获取html后，获得patent属性
 */

@Data
public class DocumentUtil {
     public Document document;
     /**
 	 * 发明名称
 	 */
     public String createThing() {
    	return document.getElementById("patentTitle").getElementsByClass("title").get(0).text().substring(6);
     }
     /**
 	 * 申请号
 	 */
     public String requestNumber() {
//    	 Elements elements=document.select("[bgcolor='#FFFFFF']");
//    	 for (int i = 0; i < elements.size(); i++) {
//			System.out.println("i="+i+" "+elements.get(i).text());
//		}
    	 
//    	 return
//    			 document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			       .getElementsByTag("td").get(2).text();
    	return document.select("[bgcolor='#FFFFFF']").get(0).text();
     }
     /**
 	 * 公开号
 	 */
     public String publicatioNumber() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(8).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(2).text();
     }
     /**
 	 * IPC分类号
 	 */
     public String ipc() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(14).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(4).text();
     }
     /**
 	 * 发明人
 	 */
     public String createPeople() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(20).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(6).text();
     }
     /**
      * 申请日
      */
     public String filingDate() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(5).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(1).text();
     }
     /**
 	 * 公开日
 	 */
     public String publicationDate() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(11).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(3).text();
     }
     /**
 	 * 申请人
 	 */
     public String proposer() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(17).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(5).text();
     }
     /**
 	 * 优先权号
 	 */
     public String priorityNumber() {
//    	 return document.getElementById("abstractItemList").getElementsByTag("table").get(0)
//    			 .getElementsByTag("td").get(23).text();
    	 return document.select("[bgcolor='#FFFFFF']").get(7).text();
     }
     /**
 	 * 摘要
 	 */
     public List<String> remark() {
    	 ArrayList<String> lStrings=new ArrayList<String>();
    	 org.jsoup.select.Elements elements= document.select("p[num]");
    	 ListIterator<Element> list= elements.listIterator();
    	 while(list.hasNext()) {
    		// System.out.println("yyyy "+list.next().text());
    		 lStrings.add(list.next().text());
    	 }
    	 return lStrings;
     }
     /**
 	 * 权利要求书
 	 */
     public List<String> profitRequest(){
    	 ArrayList<String> list=new ArrayList<String>();
    	Elements elements= document.getElementsByTag("table").get(0).getElementsByTag("td");
    	ListIterator<Element> eIterator= elements.listIterator();
    	eIterator.next();
    	while(eIterator.hasNext()) {
    	 list.add(eIterator.next().text());	
    	}
    	return list;
     }
     /**
 	 * 技术领域
 	 */
     public String  technicalField() {
    	String result="";
    	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
    	ListIterator<Element> listIterator= elements.listIterator();
    	listIterator.next();
    	while(listIterator.hasNext()) {
    		if (listIterator.next().text().trim().equals("技术领域")) {
				result=listIterator.next().text().trim();
				break;
			}
    	}
    	return result;
     }
     /**
 	 * 背景技术
 	 */
     public String BackgroundTechnology() {
    	String result="";
     	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
     	ListIterator<Element> listIterator= elements.listIterator();
     	listIterator.next();
     	while(listIterator.hasNext()) {
     		if (listIterator.next().text().trim().equals("背景技术")) {
 				result=listIterator.next().text().trim();
 				break;
 			}
     	}
     	return result;
     }
     /**
 	 * 发明内容
 	 */
     public String summaryInvention() {
    	String result="";
      	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
      	ListIterator<Element> listIterator= elements.listIterator();
      	listIterator.next();
      	while(listIterator.hasNext()) {
      		if (listIterator.next().text().trim().equals("发明内容")) {
      			String r=listIterator.next().text().trim();
   				result=result+r;
   				String str=r.trim();
   				while(!(str.length()==4&&str.startsWith("附图"))) {
   					 str=listIterator.next().text().trim();
   					// System.out.println("str:"+str+" length:"+str.length()+" "+(!(str.length()==4&&str.startsWith("附图"))));
   					 if (!(str.length()==4&&str.startsWith("附图"))) {
   						 result=result+str;
					}
   				}
  				break;
  			}
      	}
      	return result;
     }
     /**
 	 * 实用新型内容
 	 */
     public String practicalContent() {
    	 String result="";
       	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
       	ListIterator<Element> listIterator= elements.listIterator();
       	listIterator.next();
       	while(listIterator.hasNext()) {
       		if (listIterator.next().text().trim().equals("实用新型内容")) {
   				String r=listIterator.next().text().trim();
   				result=result+r;
   				String str=r.trim();
   				while(!(str.length()==4&&str.startsWith("附图"))) {
   					 str=listIterator.next().text().trim();
   					 if (!(str.length()==4&&str.startsWith("附图"))) {
   						 result=result+str;
					}
   				}
   				break;
   			}
       	}
       	return result;
     }
     /**
 	 * 附图说明
 	 */
     public String descriptionDrawings() {
    	 String result="";
        	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
        	ListIterator<Element> listIterator= elements.listIterator();
        	listIterator.next();
        	while(listIterator.hasNext()) {
        		String str=listIterator.next().text().trim();
        		if (str.length()==4&&str.startsWith("附图")) {
        			String r=listIterator.next().text().trim();
       				result=result+r;
       				while(!r.trim().equals("具体实施方式")) {
       					 r=listIterator.next().text().trim();
       					 if (!r.trim().equals("具体实施方式")) {
       						 result=result+r;
    					}
       				}
    				
    				break;
    			}
        	}
        	return result;
     }
     /**
 	 * 具体实施方式
 	 */
     public String specificMethods() {
    	 String result="";
     	Elements elements= document.getElementsByTag("table").get(1).getElementsByTag("td");
     	ListIterator<Element> listIterator= elements.listIterator();
     	listIterator.next();
     	while(listIterator.hasNext()) {
     		if (listIterator.next().text().trim().equals("具体实施方式")) {
 				result=listIterator.next().text().trim();
 				while(listIterator.hasNext()) {
 					result=result+listIterator.next().text().trim();
 				}
 				break;
 			}
     	}
     	return result;
     }
}
